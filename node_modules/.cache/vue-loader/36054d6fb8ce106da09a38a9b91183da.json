{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1619168708215},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619168679277},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":1619168678629},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619168679277},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":1619168706557}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgKiBhcyB0ZiBmcm9tICdAdGVuc29yZmxvdy90ZmpzJw0KLy9pbXBvcnQgKiBhcyBjb2NvU3NkIGZyb20gJ0B0ZW5zb3JmbG93LW1vZGVscy9jb2NvLXNzZCcNCmltcG9ydCAqIGFzIHRtSW1hZ2UgZnJvbSAnQHRlYWNoYWJsZW1hY2hpbmUvaW1hZ2UnLy90ZWFjaGFibGUgbWFjaGluZQ0KLy9pbXBvcnQgKiBhcyB0bUltYWdlIGZyb20gJ0B0ZW5zb3JmbG93LW1vZGVscy9zcGVlY2gtY29tbWFuZHMnLy90ZWFjaGFibGUgbWFjaGluZQ0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnQXBwJywNCiAgY29tcG9uZW50czogew0KICB9LA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgdmlkZW9EZXZpY2U6ICcnLA0KICAgICAgcmVzdWx0V2lkdGg6IDAsDQogICAgICByZXN1bHRIZWlnaHQ6IDAsDQogICAgICBkZXZpY2VzOiBbXSwNCiAgICAgIGJhc2VNb2RlbDogJ21vYmlsZW5ldF92MicsDQogICAgICBpc01vZGVsUmVhZHk6IGZhbHNlLA0KICAgICAgcHJlZGljdGlvbnM6IFtdLA0KICAgICAgc3ludGg6IHdpbmRvdy5zcGVlY2hTeW50aGVzaXMsDQogICAgICBsYXN0UHJlZGljdGlvbjogJycNCiAgICB9DQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIHRmLnNldEJhY2tlbmQoJ3dlYmdsJykNCiAgICB0aGlzLmxpc3RWaWRlb0RldmljZXMoKQ0KICAgIC50aGVuKHZpZGVvRGV2aWNlcyA9PiB7DQogICAgICAgIGZvciAobGV0IGRldmljZSBvZiB2aWRlb0RldmljZXMpIHsNCiAgICAgICAgICAgIHRoaXMuZGV2aWNlcy5wdXNoKGRldmljZSkNCiAgICAgICAgfQ0KICAgICAgICB0aGlzLnZpZGVvRGV2aWNlID0gdmlkZW9EZXZpY2VzWzBdLmRldmljZUlkDQogICAgfSkNCiAgICAudGhlbigoKSA9PiB7DQogICAgICAgIHJldHVybiB0aGlzLmluaXRXZWJjYW1TdHJlYW0oKQ0KICAgIH0pDQogICAgLnRoZW4oKCkgPT4gew0KICAgICAgcmV0dXJuIHRoaXMubG9hZE1vZGVsKCkNCiAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgdGhpcy5kZXRlY3RPYmplY3RzKCkNCiAgICAgIH0pDQogICAgfSkNCiAgICANCiAgfSwNCiAgbWV0aG9kczogew0KICAgIA0KICAgIGxvYWRNb2RlbCAoKSB7DQogICAgICAvL3JldHVybiBjb2NvU3NkLmxvYWQodGhpcy5iYXNlTW9kZWwpDQogICAgICByZXR1cm4gdG1JbWFnZS5sb2FkKCcvbW9kZWwuanNvbicsJy9tZXRhZGF0YS5qc29uJykvL2xvYWQgdGVhY2hhYmxlIG1hY2hpbmUNCiAgICAgIC8vcmV0dXJuIHRtSW1hZ2UubG9hZCgnL21vZGVsX2F1ZGlvLmpzb24nLCcvbWV0YWRhdGFfYXVkaW8uanNvbicpLy9sb2FkIHRlYWNoYWJsZSBtYWNoaW5lDQogICAgICAudGhlbihtb2RlbCA9PiB7DQogICAgICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsDQogICAgICAgICAgdGhpcy5pc01vZGVsUmVhZHkgPSB0cnVlDQogICAgICAgICAgY29uc29sZS5sb2coJ21vZGVsIGxvYWRlZCcpDQogICAgICB9KQ0KICAgICAgLmNhdGNoKChlcnJvcikgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKCdmYWlsZWQgdG8gbG9hZCB0aGUgbW9kZWwnLCBlcnJvcikNCiAgICAgICAgICB0aHJvdyAoZXJyb3IpDQogICAgICB9KQ0KICAgIH0sDQoNCiAgICBkZXRlY3RPYmplY3RzICgpIHsNCiAgICAgIGlmICghdGhpcy5pc01vZGVsUmVhZHkpIHJldHVybg0KDQogICAgICBpZiAodGhpcy5pc1ZpZGVvU3RyZWFtUmVhZHkpIHsNCiAgICAgIC8vdGhpcy5tb2RlbC5kZXRlY3QodGhpcy4kcmVmcy52aWRlbykNCiAgICAgIHRoaXMubW9kZWwucHJlZGljdCh0aGlzLiRyZWZzLnZpZGVvKS8vdGVhY2hhYmxlIG1hY2hpbmUNCiAgICAgICAgICAudGhlbihwcmVkaWN0aW9ucyA9PiB7DQogICAgICAgICAgICAgIC8vdGhpcy5yZW5kZXJQcmVkaWN0aW9ucyhwcmVkaWN0aW9ucykNCiAgICAgICAgICAgICAgdGhpcy5oYW5kbGVQcmVkaWN0aW9ucyhwcmVkaWN0aW9ucykvL3RlYWNoYWJsZSBtYWNoaW5lDQogICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7DQogICAgICAgICAgICAgIHRoaXMuZGV0ZWN0T2JqZWN0cygpDQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgfSkNCiAgICAgIH0gZWxzZSB7DQogICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gew0KICAgICAgICAgIHRoaXMuZGV0ZWN0T2JqZWN0cygpDQogICAgICB9KQ0KICAgICAgfQ0KICAgIH0sDQoNCiAgICByZW5kZXJQcmVkaWN0aW9ucyAocHJlZGljdGlvbnMpIHsNCiAgICAgIHRoaXMucHJlZGljdGlvbnMuc3BsaWNlKDApDQogICAgICBjb25zdCBjdHggPSB0aGlzLiRyZWZzLmNhbnZhcy5nZXRDb250ZXh0KCcyZCcpDQogICAgICBjdHguY2xlYXJSZWN0KDAsIDAsIGN0eC5jYW52YXMud2lkdGgsIGN0eC5jYW52YXMuaGVpZ2h0KQ0KICAgICAgcHJlZGljdGlvbnMuZm9yRWFjaChwcmVkaWN0aW9uID0+IHsNCiAgICAgICAgY3R4LmJlZ2luUGF0aCgpDQogICAgICAgIGN0eC5yZWN0KC4uLnByZWRpY3Rpb24uYmJveCkNCiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDMNCiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ3JlZCcNCiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZWQnDQogICAgICAgIGN0eC5zdHJva2UoKQ0KICAgICAgICBjdHguc2hhZG93Q29sb3IgPSAnd2hpdGUnDQogICAgICAgIGN0eC5zaGFkb3dCbHVyID0gMTANCiAgICAgICAgY3R4LmZvbnQgPSAnMjRweCBBcmlhbCBib2xkJw0KICAgICAgICBjdHguZmlsbFRleHQoDQogICAgICAgICAgICBgJHsocHJlZGljdGlvbi5zY29yZSAqIDEwMCkudG9GaXhlZCgxKX0lICR7cHJlZGljdGlvbi5jbGFzc31gLA0KICAgICAgICAgICAgcHJlZGljdGlvbi5iYm94WzBdLA0KICAgICAgICAgICAgcHJlZGljdGlvbi5iYm94WzFdID4gMTAgPyBwcmVkaWN0aW9uLmJib3hbMV0gLSA1IDogMTANCiAgICAgICAgKQ0KICAgICAgICB0aGlzLnByZWRpY3Rpb25zLnB1c2goew0KICAgICAgICAgIG5hbWU6IHByZWRpY3Rpb24uY2xhc3MsDQogICAgICAgICAgc2NvcmU6IChwcmVkaWN0aW9uLnNjb3JlKjEwMCkudG9GaXhlZCgxKQ0KICAgICAgICB9KQ0KICAgICAgfSkNCiAgICB9LA0KDQovKnRlYWNoYWJsZSBtYWNoaW5lKi8NCiAgICBoYW5kbGVQcmVkaWN0aW9ucyAocHJlZGljdGlvbnMpIHsNCiAgICAgIHRoaXMucHJlZGljdGlvbnMuc3BsaWNlKDApDQogICAgICANCiAgICAgIGxldCBtYXhQcmVkaWN0aW9uDQogICAgICBsZXQgbWF4UHJvYiA9IDANCiAgICAgIHByZWRpY3Rpb25zLmZvckVhY2gocHJlZGljdGlvbiA9PiB7DQogICAgICAgICAgdGhpcy5wcmVkaWN0aW9ucy5wdXNoKHsNCiAgICAgICAgICAgIG5hbWU6IHByZWRpY3Rpb24uY2xhc3NOYW1lLA0KICAgICAgICAgICAgc2NvcmU6IChwcmVkaWN0aW9uLnByb2JhYmlsaXR5ICogMTAwKS50b0ZpeGVkKDEpDQogICAgICAgICAgfSkNCiAgICAgICAgICBpZiAocHJlZGljdGlvbi5wcm9iYWJpbGl0eSA+IG1heFByb2IpIHsNCiAgICAgICAgICAgIG1heFByb2IgPSBwcmVkaWN0aW9uLnByb2JhYmlsaXR5DQogICAgICAgICAgICBtYXhQcmVkaWN0aW9uID0gcHJlZGljdGlvbg0KICAgICAgICAgIH0NCiAgICAgIH0pDQogICAgICBpZiAoISB0aGlzLnN5bnRoLnNwZWFraW5nICYmIHRoaXMubGFzdFByZWRpY3Rpb24gIT0gbWF4UHJlZGljdGlvbi5jbGFzc05hbWUpIHsNCiAgICAgICAgdGhpcy5zcGVhayhtYXhQcmVkaWN0aW9uLmNsYXNzTmFtZSkNCiAgICAgICAgdGhpcy5sYXN0UHJlZGljdGlvbiA9IG1heFByZWRpY3Rpb24uY2xhc3NOYW1lDQogICAgICB9DQogICAgfSwNCg0KICAgIHNwZWFrIChwcmVkaWN0aW9uKSB7DQogICAgICBjb25zdCB1dHRlclRoaXMgPSBuZXcgU3BlZWNoU3ludGhlc2lzVXR0ZXJhbmNlKHByZWRpY3Rpb24pOw0KICAgICAgdGhpcy5zeW50aC5zcGVhayh1dHRlclRoaXMpDQogICAgfSwNCg0KDQoNCiAgICBsaXN0VmlkZW9EZXZpY2VzICgpIHsNCiAgICAgIHJldHVybiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmVudW1lcmF0ZURldmljZXMoKQ0KICAgICAgLnRoZW4oZGV2aWNlcyA9PiB7DQogICAgICAgICAgcmV0dXJuIGRldmljZXMuZmlsdGVyKGRldmljZSA9PiBkZXZpY2Uua2luZCA9PT0gJ3ZpZGVvaW5wdXQnKQ0KICAgICAgfSkNCiAgICB9LA0KDQogICAgaW5pdFdlYmNhbVN0cmVhbSAoKSB7DQogICAgICAgIHRoaXMuaXNWaWRlb1N0cmVhbVJlYWR5ID0gZmFsc2UNCiAgICAgICAgLy8gaWYgdGhlIGJyb3dzZXIgc3VwcG9ydHMgbWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSBBUEkNCiAgICAgICAgaWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMgJiYgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHsNCiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsNCiAgICAgICAgICAgIHZpZGVvOiB7IGRldmljZUlkOiB0aGlzLnZpZGVvRGV2aWNlIH0NCiAgICAgICAgfSkNCiAgICAgICAgLnRoZW4oc3RyZWFtID0+IHsNCiAgICAgICAgICAgIC8vIHNldCA8dmlkZW8+IHNvdXJjZSBhcyB0aGUgd2ViY2FtIGlucHV0DQogICAgICAgICAgICBsZXQgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvDQogICAgICAgICAgICB2aWRlby5zcmNPYmplY3QgPSBzdHJlYW0NCg0KICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7DQogICAgICAgICAgICAvLyB3aGVuIHZpZGVvIGlzIGxvYWRlZA0KICAgICAgICAgICAgdmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9ICgpID0+IHsNCiAgICAgICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHZpZGVvIHJhdGlvDQogICAgICAgICAgICAgICAgdGhpcy52aWRlb1JhdGlvID0gdmlkZW8udmlkZW9IZWlnaHQgLyB2aWRlby52aWRlb1dpZHRoDQogICAgICAgICAgICAgICAgLy8gYWRkIGV2ZW50IGxpc3RlbmVyIG9uIHJlc2l6ZSB0byByZXNldCB0aGUgPHZpZGVvPiBhbmQgPGNhbnZhcz4gc2l6ZXMNCiAgICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zZXRSZXN1bHRTaXplKQ0KICAgICAgICAgICAgICAgIC8vIHNldCB0aGUgaW5pdGlhbCBzaXplDQogICAgICAgICAgICAgICAgdGhpcy5zZXRSZXN1bHRTaXplKCkNCiAgICAgICAgICAgICAgICB0aGlzLmlzVmlkZW9TdHJlYW1SZWFkeSA9IHRydWUNCiAgICAgICAgICAgICAgICByZXNvbHZlKCkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0pDQogICAgICAgIH0pDQogICAgICAgIC8vIGVycm9yIGhhbmRsaW5nDQogICAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIHRvIGluaXRpYWxpemUgd2ViY2FtIHN0cmVhbScsIGVycm9yKQ0KICAgICAgICB9KQ0KICAgICAgICB9DQogICAgfSwNCg0KICAgIHNldFJlc3VsdFNpemUgKCkgew0KICAgICAgICBsZXQgY2xpZW50V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgNCiAgICAgICAgdGhpcy5yZXN1bHRXaWR0aCA9IE1hdGgubWluKDYwMCwgY2xpZW50V2lkdGgpDQogICAgICAgIHRoaXMucmVzdWx0SGVpZ2h0ID0gdGhpcy5yZXN1bHRXaWR0aCAqIHRoaXMudmlkZW9SYXRpbw0KICAgICAgICBsZXQgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvDQogICAgICAgIHZpZGVvLndpZHRoID0gdGhpcy5yZXN1bHRXaWR0aA0KICAgICAgICB2aWRlby5oZWlnaHQgPSB0aGlzLnJlc3VsdEhlaWdodA0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n  <div id=\"center-container\">\r\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\r\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\r\n            {{ device.label }}\r\n        </option>\r\n    </select>\r\n    <div id=\"result-frame\">\r\n      <video ref=\"video\" autoplay></video>\r\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\r\n    </div>\r\n    <ul>\r\n    <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\r\n      {{prediction.name}}, {{prediction.score}} %\r\n    </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport * as tf from '@tensorflow/tfjs'\r\n//import * as cocoSsd from '@tensorflow-models/coco-ssd'\r\nimport * as tmImage from '@teachablemachine/image'//teachable machine\r\n//import * as tmImage from '@tensorflow-models/speech-commands'//teachable machine\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      videoDevice: '',\r\n      resultWidth: 0,\r\n      resultHeight: 0,\r\n      devices: [],\r\n      baseModel: 'mobilenet_v2',\r\n      isModelReady: false,\r\n      predictions: [],\r\n      synth: window.speechSynthesis,\r\n      lastPrediction: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    tf.setBackend('webgl')\r\n    this.listVideoDevices()\r\n    .then(videoDevices => {\r\n        for (let device of videoDevices) {\r\n            this.devices.push(device)\r\n        }\r\n        this.videoDevice = videoDevices[0].deviceId\r\n    })\r\n    .then(() => {\r\n        return this.initWebcamStream()\r\n    })\r\n    .then(() => {\r\n      return this.loadModel()\r\n      .then(() => {\r\n        this.detectObjects()\r\n      })\r\n    })\r\n    \r\n  },\r\n  methods: {\r\n    \r\n    loadModel () {\r\n      //return cocoSsd.load(this.baseModel)\r\n      return tmImage.load('/model.json','/metadata.json')//load teachable machine\r\n      //return tmImage.load('/model_audio.json','/metadata_audio.json')//load teachable machine\r\n      .then(model => {\r\n          this.model = model\r\n          this.isModelReady = true\r\n          console.log('model loaded')\r\n      })\r\n      .catch((error) => {\r\n          console.log('failed to load the model', error)\r\n          throw (error)\r\n      })\r\n    },\r\n\r\n    detectObjects () {\r\n      if (!this.isModelReady) return\r\n\r\n      if (this.isVideoStreamReady) {\r\n      //this.model.detect(this.$refs.video)\r\n      this.model.predict(this.$refs.video)//teachable machine\r\n          .then(predictions => {\r\n              //this.renderPredictions(predictions)\r\n              this.handlePredictions(predictions)//teachable machine\r\n              requestAnimationFrame(() => {\r\n              this.detectObjects()\r\n              })\r\n          })\r\n      } else {\r\n      requestAnimationFrame(() => {\r\n          this.detectObjects()\r\n      })\r\n      }\r\n    },\r\n\r\n    renderPredictions (predictions) {\r\n      this.predictions.splice(0)\r\n      const ctx = this.$refs.canvas.getContext('2d')\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n      predictions.forEach(prediction => {\r\n        ctx.beginPath()\r\n        ctx.rect(...prediction.bbox)\r\n        ctx.lineWidth = 3\r\n        ctx.strokeStyle = 'red'\r\n        ctx.fillStyle = 'red'\r\n        ctx.stroke()\r\n        ctx.shadowColor = 'white'\r\n        ctx.shadowBlur = 10\r\n        ctx.font = '24px Arial bold'\r\n        ctx.fillText(\r\n            `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\r\n            prediction.bbox[0],\r\n            prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\r\n        )\r\n        this.predictions.push({\r\n          name: prediction.class,\r\n          score: (prediction.score*100).toFixed(1)\r\n        })\r\n      })\r\n    },\r\n\r\n/*teachable machine*/\r\n    handlePredictions (predictions) {\r\n      this.predictions.splice(0)\r\n      \r\n      let maxPrediction\r\n      let maxProb = 0\r\n      predictions.forEach(prediction => {\r\n          this.predictions.push({\r\n            name: prediction.className,\r\n            score: (prediction.probability * 100).toFixed(1)\r\n          })\r\n          if (prediction.probability > maxProb) {\r\n            maxProb = prediction.probability\r\n            maxPrediction = prediction\r\n          }\r\n      })\r\n      if (! this.synth.speaking && this.lastPrediction != maxPrediction.className) {\r\n        this.speak(maxPrediction.className)\r\n        this.lastPrediction = maxPrediction.className\r\n      }\r\n    },\r\n\r\n    speak (prediction) {\r\n      const utterThis = new SpeechSynthesisUtterance(prediction);\r\n      this.synth.speak(utterThis)\r\n    },\r\n\r\n\r\n\r\n    listVideoDevices () {\r\n      return navigator.mediaDevices.enumerateDevices()\r\n      .then(devices => {\r\n          return devices.filter(device => device.kind === 'videoinput')\r\n      })\r\n    },\r\n\r\n    initWebcamStream () {\r\n        this.isVideoStreamReady = false\r\n        // if the browser supports mediaDevices.getUserMedia API\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        return navigator.mediaDevices.getUserMedia({\r\n            video: { deviceId: this.videoDevice }\r\n        })\r\n        .then(stream => {\r\n            // set <video> source as the webcam input\r\n            let video = this.$refs.video\r\n            video.srcObject = stream\r\n\r\n            return new Promise((resolve) => {\r\n            // when video is loaded\r\n            video.onloadedmetadata = () => {\r\n                // calculate the video ratio\r\n                this.videoRatio = video.videoHeight / video.videoWidth\r\n                // add event listener on resize to reset the <video> and <canvas> sizes\r\n                window.addEventListener('resize', this.setResultSize)\r\n                // set the initial size\r\n                this.setResultSize()\r\n                this.isVideoStreamReady = true\r\n                resolve()\r\n            }\r\n            })\r\n        })\r\n        // error handling\r\n        .catch(error => {\r\n            console.log('failed to initialize webcam stream', error)\r\n        })\r\n        }\r\n    },\r\n\r\n    setResultSize () {\r\n        let clientWidth = document.documentElement.clientWidth\r\n        this.resultWidth = Math.min(600, clientWidth)\r\n        this.resultHeight = this.resultWidth * this.videoRatio\r\n        let video = this.$refs.video\r\n        video.width = this.resultWidth\r\n        video.height = this.resultHeight\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\nvideo {\r\n  position: absolute;\r\n}\r\n\r\ncanvas {\r\n  position: absolute;\r\n}\r\n\r\n#center-container {\r\n  width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n#camera-select {\r\n  width: 300px;\r\n  margin-bottom: 50px;\r\n}\r\n</style>\r\n"]}]}