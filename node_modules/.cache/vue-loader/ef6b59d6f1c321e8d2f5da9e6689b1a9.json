{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1616697454712},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vaW1wb3J0IEhlbGxvV29ybGQgZnJvbSAnLi9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlJwppbXBvcnQgKiBhcyB0ZiBmcm9tICdAdGVuc29yZmxvdy90ZmpzJwppbXBvcnQgKiBhcyBjb2NvU3NkIGZyb20gJ0B0ZW5zb3JmbG93LW1vZGVscy9jb2NvLXNzZCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXBwJywKICBjb21wb25lbnRzOiB7CiAgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvRGV2aWNlOiAnJywKICAgICAgcmVzdWx0V2lkdGg6IDAsCiAgICAgIHJlc3VsdEhlaWdodDogMCwKICAgICAgZGV2aWNlczogW10sCiAgICAgICAgICBiYXNlTW9kZWw6ICdtb2JpbGVuZXRfdjInLAogICAgICAgICAgaXNNb2RlbFJlYWR5OiBmYWxzZSwKICAgICAgcHJlZGljdGlvbnM6IFtdCiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRmLnNldEJhY2tlbmQoJ3dlYmdsJykKICAgIHRoaXMubGlzdFZpZGVvRGV2aWNlcygpCiAgICAudGhlbih2aWRlb0RldmljZXMgPT4gewogICAgICAgIGZvciAobGV0IGRldmljZSBvZiB2aWRlb0RldmljZXMpIHsKICAgICAgICAgICAgdGhpcy5kZXZpY2VzLnB1c2goZGV2aWNlKQogICAgICAgIH0KICAgICAgICB0aGlzLnZpZGVvRGV2aWNlID0gdmlkZW9EZXZpY2VzWzBdLmRldmljZUlkCiAgICB9KQogICAgLnRoZW4oKCkgPT4gewogICAgICAgIHJldHVybiB0aGlzLmluaXRXZWJjYW1TdHJlYW0oKQogICAgfSkKICAgIC50aGVuKCgpID0+IHsKICAgICAgcmV0dXJuIHRoaXMubG9hZE1vZGVsKCkKICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMuZGV0ZWN0T2JqZWN0cygpCiAgICAgIH0pCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgbGlzdFZpZGVvRGV2aWNlcyAoKSB7CiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpCiAgICAgICAgLnRoZW4oZGV2aWNlcyA9PiB7CiAgICAgICAgICAgIHJldHVybiBkZXZpY2VzLmZpbHRlcihkZXZpY2UgPT4gZGV2aWNlLmtpbmQgPT09ICd2aWRlb2lucHV0JykKICAgICAgICB9KQogICAgfSwKCiAgICBpbml0V2ViY2FtU3RyZWFtICgpIHsKICAgICAgICB0aGlzLmlzVmlkZW9TdHJlYW1SZWFkeSA9IGZhbHNlCiAgICAgICAgLy8gaWYgdGhlIGJyb3dzZXIgc3VwcG9ydHMgbWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSBBUEkKICAgICAgICBpZiAobmF2aWdhdG9yLm1lZGlhRGV2aWNlcyAmJiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSkgewogICAgICAgIHJldHVybiBuYXZpZ2F0b3IubWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSh7CiAgICAgICAgICAgIHZpZGVvOiB7IGRldmljZUlkOiB0aGlzLnZpZGVvRGV2aWNlIH0KICAgICAgICB9KQogICAgICAgIC50aGVuKHN0cmVhbSA9PiB7CiAgICAgICAgICAgIC8vIHNldCA8dmlkZW8+IHNvdXJjZSBhcyB0aGUgd2ViY2FtIGlucHV0CiAgICAgICAgICAgIGxldCB2aWRlbyA9IHRoaXMuJHJlZnMudmlkZW8KICAgICAgICAgICAgdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtCgogICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgICAgICAgLy8gd2hlbiB2aWRlbyBpcyBsb2FkZWQKICAgICAgICAgICAgdmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9ICgpID0+IHsKICAgICAgICAgICAgICAgIC8vIGNhbGN1bGF0ZSB0aGUgdmlkZW8gcmF0aW8KICAgICAgICAgICAgICAgIHRoaXMudmlkZW9SYXRpbyA9IHZpZGVvLnZpZGVvSGVpZ2h0IC8gdmlkZW8udmlkZW9XaWR0aAogICAgICAgICAgICAgICAgLy8gYWRkIGV2ZW50IGxpc3RlbmVyIG9uIHJlc2l6ZSB0byByZXNldCB0aGUgPHZpZGVvPiBhbmQgPGNhbnZhcz4gc2l6ZXMKICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFJlc3VsdFNpemUpCiAgICAgICAgICAgICAgICAvLyBzZXQgdGhlIGluaXRpYWwgc2l6ZQogICAgICAgICAgICAgICAgdGhpcy5zZXRSZXN1bHRTaXplKCkKICAgICAgICAgICAgICAgIHRoaXMuaXNWaWRlb1N0cmVhbVJlYWR5ID0gdHJ1ZQogICAgICAgICAgICAgICAgcmVzb2x2ZSgpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICB9KQogICAgICAgIC8vIGVycm9yIGhhbmRsaW5nCiAgICAgICAgLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ2ZhaWxlZCB0byBpbml0aWFsaXplIHdlYmNhbSBzdHJlYW0nLCBlcnJvcikKICAgICAgICB9KQogICAgICAgIH0KICAgIH0sCgogICAgc2V0UmVzdWx0U2l6ZSAoKSB7CiAgICAgICAgbGV0IGNsaWVudFdpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoCiAgICAgICAgdGhpcy5yZXN1bHRXaWR0aCA9IE1hdGgubWluKDYwMCwgY2xpZW50V2lkdGgpCiAgICAgICAgdGhpcy5yZXN1bHRIZWlnaHQgPSB0aGlzLnJlc3VsdFdpZHRoICogdGhpcy52aWRlb1JhdGlvCiAgICAgICAgbGV0IHZpZGVvID0gdGhpcy4kcmVmcy52aWRlbwogICAgICAgIHZpZGVvLndpZHRoID0gdGhpcy5yZXN1bHRXaWR0aAogICAgICAgIHZpZGVvLmhlaWdodCA9IHRoaXMucmVzdWx0SGVpZ2h0CiAgICAgIH0gLAoKICAgICAgbG9hZE1vZGVsICgpIHsKICAgICAgcmV0dXJuIGNvY29Tc2QubG9hZCh0aGlzLmJhc2VNb2RlbCkKICAgICAgLnRoZW4obW9kZWwgPT4gewogICAgICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsCiAgICAgICAgICB0aGlzLmlzTW9kZWxSZWFkeSA9IHRydWUKICAgICAgICAgIGNvbnNvbGUubG9nKCdtb2RlbCBsb2FkZWQnKQogICAgICB9KQogICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIHRvIGxvYWQgdGhlIG1vZGVsJywgZXJyb3IpCiAgICAgICAgICB0aHJvdyAoZXJyb3IpCiAgICAgIH0pCiAgfSwKCiAgZGV0ZWN0T2JqZWN0cyAoKSB7CiAgICAgIGlmICghdGhpcy5pc01vZGVsUmVhZHkpIHJldHVybgoKICAgICAgaWYgKHRoaXMuaXNWaWRlb1N0cmVhbVJlYWR5KSB7CiAgICAgIHRoaXMubW9kZWwuZGV0ZWN0KHRoaXMuJHJlZnMudmlkZW8pCiAgICAgICAgICAudGhlbihwcmVkaWN0aW9ucyA9PiB7CiAgICAgICAgICAgICAgdGhpcy5yZW5kZXJQcmVkaWN0aW9ucyhwcmVkaWN0aW9ucykKICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gewogICAgICAgICAgICAgIHRoaXMuZGV0ZWN0T2JqZWN0cygpCiAgICAgICAgICAgICAgfSkKICAgICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7CiAgICAgICAgICB0aGlzLmRldGVjdE9iamVjdHMoKQogICAgICB9KQogICAgICB9CiAgfSwKCiAgcmVuZGVyUHJlZGljdGlvbnMgKHByZWRpY3Rpb25zKSB7CiAgICAgIHRoaXMucHJlZGljdGlvbnMuc3BsaWNlKDApCiAgICAgIGNvbnN0IGN0eCA9IHRoaXMuJHJlZnMuY2FudmFzLmdldENvbnRleHQoJzJkJykKICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjdHguY2FudmFzLndpZHRoLCBjdHguY2FudmFzLmhlaWdodCkKICAgICAgcHJlZGljdGlvbnMuZm9yRWFjaChwcmVkaWN0aW9uID0+IHsKICAgICAgICAgIGN0eC5iZWdpblBhdGgoKQogICAgICAgICAgY3R4LnJlY3QoLi4ucHJlZGljdGlvbi5iYm94KQogICAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDMKICAgICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZWQnCiAgICAgICAgICBjdHguZmlsbFN0eWxlID0gJ3JlZCcKICAgICAgICAgIGN0eC5zdHJva2UoKQogICAgICAgICAgY3R4LnNoYWRvd0NvbG9yID0gJ3doaXRlJwogICAgICAgICAgY3R4LnNoYWRvd0JsdXIgPSAxMAogICAgICAgICAgY3R4LmZvbnQgPSAnMjRweCBBcmlhbCBib2xkJwogICAgICAgICAgY3R4LmZpbGxUZXh0KAogICAgICAgICAgICAgIGAkeyhwcmVkaWN0aW9uLnNjb3JlICogMTAwKS50b0ZpeGVkKDEpfSUgJHtwcmVkaWN0aW9uLmNsYXNzfWAsCiAgICAgICAgICAgICAgcHJlZGljdGlvbi5iYm94WzBdLAogICAgICAgICAgICAgIHByZWRpY3Rpb24uYmJveFsxXSA+IDEwID8gcHJlZGljdGlvbi5iYm94WzFdIC0gNSA6IDEwCiAgICAgICAgICApCiAgICAgICAgICB0aGlzLnByZWRpY3Rpb25zLnB1c2goewogICAgICAgICAgbmFtZTogcHJlZGljdGlvbi5jbGFzcywKICAgICAgICAgIHNjb3JlOiAocHJlZGljdGlvbi5zY29yZSoxMDApLnRvRml4ZWQoMSkKICAgICAgICB9KQogICAgICB9KQogIH0KCgp9Cgp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n  <div id=\"center-container\">\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\n            {{ device.label }}\n        </option>\n    </select>\n    <div id=\"result-frame\">\n      <video ref=\"video\" autoplay></video>\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\n    </div>\n  </div>\n  <ul>\n  <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\n    {{prediction.name}}, {{prediction.score}} %\n  </li>\n</ul>\n</div>\n\n</template>\n\n<script>\n//import HelloWorld from './components/HelloWorld.vue'\nimport * as tf from '@tensorflow/tfjs'\nimport * as cocoSsd from '@tensorflow-models/coco-ssd'\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      videoDevice: '',\n      resultWidth: 0,\n      resultHeight: 0,\n      devices: [],\n          baseModel: 'mobilenet_v2',\n          isModelReady: false,\n      predictions: []\n    }\n  },\n  mounted () {\n    tf.setBackend('webgl')\n    this.listVideoDevices()\n    .then(videoDevices => {\n        for (let device of videoDevices) {\n            this.devices.push(device)\n        }\n        this.videoDevice = videoDevices[0].deviceId\n    })\n    .then(() => {\n        return this.initWebcamStream()\n    })\n    .then(() => {\n      return this.loadModel()\n      .then(() => {\n        this.detectObjects()\n      })\n    })\n  },\n  methods: {\n    listVideoDevices () {\n        return navigator.mediaDevices.enumerateDevices()\n        .then(devices => {\n            return devices.filter(device => device.kind === 'videoinput')\n        })\n    },\n\n    initWebcamStream () {\n        this.isVideoStreamReady = false\n        // if the browser supports mediaDevices.getUserMedia API\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        return navigator.mediaDevices.getUserMedia({\n            video: { deviceId: this.videoDevice }\n        })\n        .then(stream => {\n            // set <video> source as the webcam input\n            let video = this.$refs.video\n            video.srcObject = stream\n\n            return new Promise((resolve) => {\n            // when video is loaded\n            video.onloadedmetadata = () => {\n                // calculate the video ratio\n                this.videoRatio = video.videoHeight / video.videoWidth\n                // add event listener on resize to reset the <video> and <canvas> sizes\n                window.addEventListener('resize', this.setResultSize)\n                // set the initial size\n                this.setResultSize()\n                this.isVideoStreamReady = true\n                resolve()\n            }\n            })\n        })\n        // error handling\n        .catch(error => {\n            console.log('failed to initialize webcam stream', error)\n        })\n        }\n    },\n\n    setResultSize () {\n        let clientWidth = document.documentElement.clientWidth\n        this.resultWidth = Math.min(600, clientWidth)\n        this.resultHeight = this.resultWidth * this.videoRatio\n        let video = this.$refs.video\n        video.width = this.resultWidth\n        video.height = this.resultHeight\n      } ,\n\n      loadModel () {\n      return cocoSsd.load(this.baseModel)\n      .then(model => {\n          this.model = model\n          this.isModelReady = true\n          console.log('model loaded')\n      })\n      .catch((error) => {\n          console.log('failed to load the model', error)\n          throw (error)\n      })\n  },\n\n  detectObjects () {\n      if (!this.isModelReady) return\n\n      if (this.isVideoStreamReady) {\n      this.model.detect(this.$refs.video)\n          .then(predictions => {\n              this.renderPredictions(predictions)\n              requestAnimationFrame(() => {\n              this.detectObjects()\n              })\n          })\n      } else {\n      requestAnimationFrame(() => {\n          this.detectObjects()\n      })\n      }\n  },\n\n  renderPredictions (predictions) {\n      this.predictions.splice(0)\n      const ctx = this.$refs.canvas.getContext('2d')\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      predictions.forEach(prediction => {\n          ctx.beginPath()\n          ctx.rect(...prediction.bbox)\n          ctx.lineWidth = 3\n          ctx.strokeStyle = 'red'\n          ctx.fillStyle = 'red'\n          ctx.stroke()\n          ctx.shadowColor = 'white'\n          ctx.shadowBlur = 10\n          ctx.font = '24px Arial bold'\n          ctx.fillText(\n              `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\n              prediction.bbox[0],\n              prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\n          )\n          this.predictions.push({\n          name: prediction.class,\n          score: (prediction.score*100).toFixed(1)\n        })\n      })\n  }\n\n\n}\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nvideo {\n  position: absolute;\n}\n\ncanvas {\n  position: absolute;\n}\n\n#center-container {\n  width: 600px;\n  margin: 0 auto;\n}\n\n#camera-select {\n  width: 300px;\n  margin-bottom: 50px;\n}\n</style>\n"]}]}