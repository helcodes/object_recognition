{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1619168708215},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619168679277},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":1619168678629},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619168679277},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":1619168706557}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n  <div id=\"center-container\">\r\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\r\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\r\n            {{ device.label }}\r\n        </option>\r\n    </select>\r\n    <div id=\"result-frame\">\r\n      <video ref=\"video\" autoplay></video>\r\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\r\n    </div>\r\n    <ul>\r\n    <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\r\n      {{prediction.name}}, {{prediction.score}} %\r\n    </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport * as tf from '@tensorflow/tfjs'\r\n//import * as cocoSsd from '@tensorflow-models/coco-ssd'\r\nimport * as tmImage from '@teachablemachine/image'//teachable machine\r\n//import * as tmImage from '@tensorflow-models/speech-commands'//teachable machine\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      videoDevice: '',\r\n      resultWidth: 0,\r\n      resultHeight: 0,\r\n      devices: [],\r\n      baseModel: 'mobilenet_v2',\r\n      isModelReady: false,\r\n      predictions: [],\r\n      synth: window.speechSynthesis,\r\n      lastPrediction: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    tf.setBackend('webgl')\r\n    this.listVideoDevices()\r\n    .then(videoDevices => {\r\n        for (let device of videoDevices) {\r\n            this.devices.push(device)\r\n        }\r\n        this.videoDevice = videoDevices[0].deviceId\r\n    })\r\n    .then(() => {\r\n        return this.initWebcamStream()\r\n    })\r\n    .then(() => {\r\n      return this.loadModel()\r\n      .then(() => {\r\n        this.detectObjects()\r\n      })\r\n    })\r\n    \r\n  },\r\n  methods: {\r\n    \r\n    loadModel () {\r\n      //return cocoSsd.load(this.baseModel)\r\n      return tmImage.load('/model.json','/metadata.json')//load teachable machine\r\n      //return tmImage.load('/model_audio.json','/metadata_audio.json')//load teachable machine\r\n      .then(model => {\r\n          this.model = model\r\n          this.isModelReady = true\r\n          console.log('model loaded')\r\n      })\r\n      .catch((error) => {\r\n          console.log('failed to load the model', error)\r\n          throw (error)\r\n      })\r\n    },\r\n\r\n    detectObjects () {\r\n      if (!this.isModelReady) return\r\n\r\n      if (this.isVideoStreamReady) {\r\n      //this.model.detect(this.$refs.video)\r\n      this.model.predict(this.$refs.video)//teachable machine\r\n          .then(predictions => {\r\n              //this.renderPredictions(predictions)\r\n              this.handlePredictions(predictions)//teachable machine\r\n              requestAnimationFrame(() => {\r\n              this.detectObjects()\r\n              })\r\n          })\r\n      } else {\r\n      requestAnimationFrame(() => {\r\n          this.detectObjects()\r\n      })\r\n      }\r\n    },\r\n\r\n    renderPredictions (predictions) {\r\n      this.predictions.splice(0)\r\n      const ctx = this.$refs.canvas.getContext('2d')\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n      predictions.forEach(prediction => {\r\n        ctx.beginPath()\r\n        ctx.rect(...prediction.bbox)\r\n        ctx.lineWidth = 3\r\n        ctx.strokeStyle = 'red'\r\n        ctx.fillStyle = 'red'\r\n        ctx.stroke()\r\n        ctx.shadowColor = 'white'\r\n        ctx.shadowBlur = 10\r\n        ctx.font = '24px Arial bold'\r\n        ctx.fillText(\r\n            `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\r\n            prediction.bbox[0],\r\n            prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\r\n        )\r\n        this.predictions.push({\r\n          name: prediction.class,\r\n          score: (prediction.score*100).toFixed(1)\r\n        })\r\n      })\r\n    },\r\n\r\n/*teachable machine*/\r\n    handlePredictions (predictions) {\r\n      this.predictions.splice(0)\r\n      \r\n      let maxPrediction\r\n      let maxProb = 0\r\n      predictions.forEach(prediction => {\r\n          this.predictions.push({\r\n            name: prediction.className,\r\n            score: (prediction.probability * 100).toFixed(1)\r\n          })\r\n          if (prediction.probability > maxProb) {\r\n            maxProb = prediction.probability\r\n            maxPrediction = prediction\r\n          }\r\n      })\r\n      if (! this.synth.speaking && this.lastPrediction != maxPrediction.className) {\r\n        this.speak(maxPrediction.className)\r\n        this.lastPrediction = maxPrediction.className\r\n      }\r\n    },\r\n\r\n    speak (prediction) {\r\n      const utterThis = new SpeechSynthesisUtterance(prediction);\r\n      this.synth.speak(utterThis)\r\n    },\r\n\r\n\r\n\r\n    listVideoDevices () {\r\n      return navigator.mediaDevices.enumerateDevices()\r\n      .then(devices => {\r\n          return devices.filter(device => device.kind === 'videoinput')\r\n      })\r\n    },\r\n\r\n    initWebcamStream () {\r\n        this.isVideoStreamReady = false\r\n        // if the browser supports mediaDevices.getUserMedia API\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        return navigator.mediaDevices.getUserMedia({\r\n            video: { deviceId: this.videoDevice }\r\n        })\r\n        .then(stream => {\r\n            // set <video> source as the webcam input\r\n            let video = this.$refs.video\r\n            video.srcObject = stream\r\n\r\n            return new Promise((resolve) => {\r\n            // when video is loaded\r\n            video.onloadedmetadata = () => {\r\n                // calculate the video ratio\r\n                this.videoRatio = video.videoHeight / video.videoWidth\r\n                // add event listener on resize to reset the <video> and <canvas> sizes\r\n                window.addEventListener('resize', this.setResultSize)\r\n                // set the initial size\r\n                this.setResultSize()\r\n                this.isVideoStreamReady = true\r\n                resolve()\r\n            }\r\n            })\r\n        })\r\n        // error handling\r\n        .catch(error => {\r\n            console.log('failed to initialize webcam stream', error)\r\n        })\r\n        }\r\n    },\r\n\r\n    setResultSize () {\r\n        let clientWidth = document.documentElement.clientWidth\r\n        this.resultWidth = Math.min(600, clientWidth)\r\n        this.resultHeight = this.resultWidth * this.videoRatio\r\n        let video = this.$refs.video\r\n        video.width = this.resultWidth\r\n        video.height = this.resultHeight\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\nvideo {\r\n  position: absolute;\r\n}\r\n\r\ncanvas {\r\n  position: absolute;\r\n}\r\n\r\n#center-container {\r\n  width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n#camera-select {\r\n  width: 300px;\r\n  margin-bottom: 50px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src"}]}