{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1619162076055},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <div class=\"center-container\">\r\n      <select class=\"margin-10 device-select\" v-model=\"audioDevice\">\r\n        <option v-for=\"device, id in audioDevices\" :key=\"id\" :value=\"device.deviceId\">\r\n          {{ device.label }}\r\n        </option>\r\n      </select>\r\n      <table class=\"margin-10\">\r\n        <tr class=\"top-row\" v-if=\"topPrediction != null\">\r\n          <td>{{ topPrediction.name }}</td>\r\n          <td>{{ topPrediction.score }} %</td>\r\n        </tr>\r\n        <tr v-else>\r\n          <td>Not sure...</td>\r\n        </tr>\r\n        <tr class=\"other-rows\" v-for=\"(prediction, index) in filteredSortedPredictions\" v-bind:key=\"index\">\r\n          <td>{{prediction.name}}</td>\r\n          <td>{{prediction.score}} %</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport * as speechCommands from '@tensorflow-models/speech-commands'\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      isModelReady: false,\r\n      predictions: [],\r\n      audioTrackConstraints: {},\r\n      audioDevices: [],\r\n      audioDevice: ''\r\n    }\r\n  },\r\n  watch: {\r\n    audioDevice: function (deviceId) {\r\n      if (this.recognizer) {\r\n        this.setupRecognizer(deviceId)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    sortedPredictions () {\r\n      const predictions = [...this.predictions]\r\n      predictions.sort((a, b) => {\r\n        return (b.score - a.score)\r\n      })\r\n      return predictions\r\n    },\r\n    topPrediction () {\r\n      if (this.sortedPredictions.length > 0) {\r\n        return this.sortedPredictions[0]\r\n      }\r\n      else {\r\n        return null\r\n      }\r\n    },\r\n    filteredSortedPredictions () {\r\n      const t = this.topPrediction\r\n      return this.sortedPredictions.filter(p => p != t)\r\n    }\r\n  },\r\n  async mounted () {\r\n    tf.setBackend('webgl')\r\n    const enumeratorPromise = navigator.mediaDevices.enumerateDevices()\r\n    enumeratorPromise.then(async devices => {\r\n      devices.forEach(device => {\r\n        if (device.kind === 'audioinput') {\r\n          this.audioDevices.push(device)\r\n        }\r\n      })\r\n      this.audioDevice = this.audioDevices[0].deviceId\r\n      this.recognizer = await this.createModel()\r\n      this.classLabels = this.recognizer.wordLabels() // get class labels\r\n      \r\n      this.setupRecognizer(this.audioDevice)\r\n    })\r\n\r\n    this.webSocket=new WebSocket('ws://localhost:8081')\r\n  },\r\n  methods: {\r\n    async setupRecognizer (deviceId) {\r\n      if (this.recognizer.isListening()) {\r\n        await this.recognizer.stopListening()\r\n      }\r\n      // listen() takes two arguments:\r\n      // 1. A callback function that is invoked anytime a word is recognized.\r\n      // 2. A configuration object with adjustable fields\r\n      await this.recognizer.listen(result => {\r\n        this.handlePredictions(result.scores)\r\n      }, {\r\n          includeSpectrogram: false, // in case listen should return result.spectrogram\r\n          probabilityThreshold: 0.75,\r\n          invokeCallbackOnNoiseAndUnknown: true,\r\n          overlapFactor: 0.5, // probably want between 0.5 and 0.75. More info in README\r\n          audioTrackConstraints: {\r\n            deviceId: deviceId\r\n          }\r\n      })\r\n    },\r\n    \r\n    async createModel() {\r\n        //const recognizer = speechCommands.create('BROWSER_FFT', '18w')\r\n        // (1) try replacing the '18w' function argument with 'directional4w'.\r\n        // - What happens? Why?\r\n        // - check https://github.com/tensorflow/tfjs-models/tree/master/speech-commands\r\n        // (2) replace the model trained on Speech Commands with a model trained on your own data\r\n        /**/\r\n        const checkpointURL = `${location.protocol}//${location.host}/model.json` // model topology\r\n        const metadataURL = `${location.protocol}//${location.host}/metadata.json` // model metadata\r\n        //const checkpointURL = 'model.json' // model topology\r\n        //const metadataURL = 'metadata.json' // model metadata\r\n        console.log(checkpointURL)\r\n        console.log(metadataURL)\r\n        const recognizer = speechCommands.create(\r\n            'BROWSER_FFT', // fourier transform type, not useful to change\r\n            undefined, // speech commands vocabulary feature, not useful for your models\r\n            checkpointURL,\r\n            metadataURL)\r\n        \r\n        // check that model and metadata are loaded via HTTPS requests.\r\n        await recognizer.ensureModelLoaded()\r\n        return recognizer\r\n    },\r\n    handlePredictions (predictions) {\r\n        this.predictions.length = 0\r\n        \r\n        predictions.forEach((prediction, index) => {\r\n            this.predictions.push({\r\n              name: this.classLabels[index],\r\n              score: (prediction * 100).toFixed(1)\r\n            })\r\n        })\r\n\r\n        const message = {\r\n          detectionType: 'speech',\r\n          className: this.topPrediction.name,\r\n          score: this.topPrediction.score\r\n        }\r\n        console.log(message)\r\n        this.webSocket.send(JSON.stringify(message));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-spacing: 5px;\r\n}\r\n.margin-10 {\r\n  margin: 10px;\r\n}\r\n.top-row {\r\n  background-color: rgba(0, 200, 0, 0.1);\r\n  height: 40px;\r\n  font-weight: 900;\r\n}\r\n.other-rows {\r\n  background-color: rgba(200, 0, 0, 0.1);\r\n  height: 30px;\r\n  font-weight: 400;\r\n}\r\ntd {\r\n  padding: 5px;\r\n}\r\ntd:nth-child(1) {\r\n  width: 70%;\r\n    text-align: left;\r\n}\r\ntd:nth-child(2) {\r\n  width: 30%;\r\n  text-align: center;\r\n}\r\n.center-container {\r\n  width: 600px;\r\n  margin: 0 auto;\r\n}\r\n.device-select {\r\n  width: 100%;\r\n}\r\n</style>"],"sourceRoot":"src"}]}