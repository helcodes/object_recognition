{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1617548695206},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9kZXZlbG9wL29iamVjdF9yZWNvZ25pdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiQzovZGV2ZWxvcC9vYmplY3RfcmVjb2duaXRpb24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vaW1wb3J0IEhlbGxvV29ybGQgZnJvbSAnLi9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlJwppbXBvcnQgKiBhcyB0ZiBmcm9tICdAdGVuc29yZmxvdy90ZmpzJzsKaW1wb3J0ICogYXMgY29jb1NzZCBmcm9tICdAdGVuc29yZmxvdy1tb2RlbHMvY29jby1zc2QnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvRGV2aWNlOiAnJywKICAgICAgcmVzdWx0V2lkdGg6IDAsCiAgICAgIHJlc3VsdEhlaWdodDogMCwKICAgICAgZGV2aWNlczogW10sCiAgICAgIGJhc2VNb2RlbDogJ21vYmlsZW5ldF92MicsCiAgICAgIGlzTW9kZWxSZWFkeTogZmFsc2UsCiAgICAgIHByZWRpY3Rpb25zOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vdGYuc2V0QmFja2VuZCgnd2ViZ2wnKQogICAgdGhpcy5saXN0VmlkZW9EZXZpY2VzKCkudGhlbihmdW5jdGlvbiAodmlkZW9EZXZpY2VzKSB7CiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih2aWRlb0RldmljZXMpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgZGV2aWNlID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgX3RoaXMuZGV2aWNlcy5wdXNoKGRldmljZSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgIH0KCiAgICAgIF90aGlzLnZpZGVvRGV2aWNlID0gdmlkZW9EZXZpY2VzWzBdLmRldmljZUlkOwogICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfdGhpcy5pbml0V2ViY2FtU3RyZWFtKCk7CiAgICB9KTsgLy8udGhlbigoKSA9PiB7CiAgICAvLyAgcmV0dXJuIHRoaXMubG9hZE1vZGVsKCkKICAgIC8vICAudGhlbigoKSA9PiB7CiAgICAvLyAgICB0aGlzLmRldGVjdE9iamVjdHMoKQogICAgLy8gIH0pCiAgICAvL30pCiAgfSwKICBtZXRob2RzOiB7CiAgICBsaXN0VmlkZW9EZXZpY2VzOiBmdW5jdGlvbiBsaXN0VmlkZW9EZXZpY2VzKCkgewogICAgICByZXR1cm4gbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5lbnVtZXJhdGVEZXZpY2VzKCkudGhlbihmdW5jdGlvbiAoZGV2aWNlcykgewogICAgICAgIHJldHVybiBkZXZpY2VzLmZpbHRlcihmdW5jdGlvbiAoZGV2aWNlKSB7CiAgICAgICAgICByZXR1cm4gZGV2aWNlLmtpbmQgPT09ICd2aWRlb2lucHV0JzsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgaW5pdFdlYmNhbVN0cmVhbTogZnVuY3Rpb24gaW5pdFdlYmNhbVN0cmVhbSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmlzVmlkZW9TdHJlYW1SZWFkeSA9IGZhbHNlOyAvLyBpZiB0aGUgYnJvd3NlciBzdXBwb3J0cyBtZWRpYURldmljZXMuZ2V0VXNlck1lZGlhIEFQSQoKICAgICAgaWYgKG5hdmlnYXRvci5tZWRpYURldmljZXMgJiYgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHsKICAgICAgICByZXR1cm4gbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoewogICAgICAgICAgdmlkZW86IHsKICAgICAgICAgICAgZGV2aWNlSWQ6IHRoaXMudmlkZW9EZXZpY2UKICAgICAgICAgIH0KICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChzdHJlYW0pIHsKICAgICAgICAgIC8vIHNldCA8dmlkZW8+IHNvdXJjZSBhcyB0aGUgd2ViY2FtIGlucHV0CiAgICAgICAgICB2YXIgdmlkZW8gPSBfdGhpczIuJHJlZnMudmlkZW87CiAgICAgICAgICB2aWRlby5zcmNPYmplY3QgPSBzdHJlYW07CiAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgLy8gd2hlbiB2aWRlbyBpcyBsb2FkZWQKICAgICAgICAgICAgdmlkZW8ub25sb2FkZWRtZXRhZGF0YSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAvLyBjYWxjdWxhdGUgdGhlIHZpZGVvIHJhdGlvCiAgICAgICAgICAgICAgX3RoaXMyLnZpZGVvUmF0aW8gPSB2aWRlby52aWRlb0hlaWdodCAvIHZpZGVvLnZpZGVvV2lkdGg7IC8vIGFkZCBldmVudCBsaXN0ZW5lciBvbiByZXNpemUgdG8gcmVzZXQgdGhlIDx2aWRlbz4gYW5kIDxjYW52YXM+IHNpemVzCgogICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBfdGhpczIuc2V0UmVzdWx0U2l6ZSk7IC8vIHNldCB0aGUgaW5pdGlhbCBzaXplCgogICAgICAgICAgICAgIF90aGlzMi5zZXRSZXN1bHRTaXplKCk7CgogICAgICAgICAgICAgIF90aGlzMi5pc1ZpZGVvU3RyZWFtUmVhZHkgPSB0cnVlOwogICAgICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgIH0pIC8vIGVycm9yIGhhbmRsaW5nCiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ2ZhaWxlZCB0byBpbml0aWFsaXplIHdlYmNhbSBzdHJlYW0nLCBlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzZXRSZXN1bHRTaXplOiBmdW5jdGlvbiBzZXRSZXN1bHRTaXplKCkgewogICAgICB2YXIgY2xpZW50V2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7CiAgICAgIHRoaXMucmVzdWx0V2lkdGggPSBNYXRoLm1pbig2MDAsIGNsaWVudFdpZHRoKTsKICAgICAgdGhpcy5yZXN1bHRIZWlnaHQgPSB0aGlzLnJlc3VsdFdpZHRoICogdGhpcy52aWRlb1JhdGlvOwogICAgICB2YXIgdmlkZW8gPSB0aGlzLiRyZWZzLnZpZGVvOwogICAgICB2aWRlby53aWR0aCA9IHRoaXMucmVzdWx0V2lkdGg7CiAgICAgIHZpZGVvLmhlaWdodCA9IHRoaXMucmVzdWx0SGVpZ2h0OwogICAgfSwKICAgIGxvYWRNb2RlbDogZnVuY3Rpb24gbG9hZE1vZGVsKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBjb2NvU3NkLmxvYWQodGhpcy5iYXNlTW9kZWwpLnRoZW4oZnVuY3Rpb24gKG1vZGVsKSB7CiAgICAgICAgX3RoaXMzLm1vZGVsID0gbW9kZWw7CiAgICAgICAgX3RoaXMzLmlzTW9kZWxSZWFkeSA9IHRydWU7CiAgICAgICAgY29uc29sZS5sb2coJ21vZGVsIGxvYWRlZCcpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygnZmFpbGVkIHRvIGxvYWQgdGhlIG1vZGVsJywgZXJyb3IpOwogICAgICAgIHRocm93IGVycm9yOwogICAgICB9KTsKICAgIH0sCiAgICBkZXRlY3RPYmplY3RzOiBmdW5jdGlvbiBkZXRlY3RPYmplY3RzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5pc01vZGVsUmVhZHkpIHJldHVybjsKCiAgICAgIGlmICh0aGlzLmlzVmlkZW9TdHJlYW1SZWFkeSkgewogICAgICAgIHRoaXMubW9kZWwuZGV0ZWN0KHRoaXMuJHJlZnMudmlkZW8pLnRoZW4oZnVuY3Rpb24gKHByZWRpY3Rpb25zKSB7CiAgICAgICAgICBfdGhpczQucmVuZGVyUHJlZGljdGlvbnMocHJlZGljdGlvbnMpOwoKICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzNC5kZXRlY3RPYmplY3RzKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM0LmRldGVjdE9iamVjdHMoKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIHJlbmRlclByZWRpY3Rpb25zOiBmdW5jdGlvbiByZW5kZXJQcmVkaWN0aW9ucyhwcmVkaWN0aW9ucykgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHRoaXMucHJlZGljdGlvbnMuc3BsaWNlKDApOwogICAgICB2YXIgY3R4ID0gdGhpcy4kcmVmcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTsKICAgICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjdHguY2FudmFzLndpZHRoLCBjdHguY2FudmFzLmhlaWdodCk7CiAgICAgIHByZWRpY3Rpb25zLmZvckVhY2goZnVuY3Rpb24gKHByZWRpY3Rpb24pIHsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4LnJlY3QuYXBwbHkoY3R4LCBfdG9Db25zdW1hYmxlQXJyYXkocHJlZGljdGlvbi5iYm94KSk7CiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IDM7CiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gJ3JlZCc7CiAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZWQnOwogICAgICAgIGN0eC5zdHJva2UoKTsKICAgICAgICBjdHguc2hhZG93Q29sb3IgPSAnd2hpdGUnOwogICAgICAgIGN0eC5zaGFkb3dCbHVyID0gMTA7CiAgICAgICAgY3R4LmZvbnQgPSAnMjRweCBBcmlhbCBib2xkJzsKICAgICAgICBjdHguZmlsbFRleHQoIiIuY29uY2F0KChwcmVkaWN0aW9uLnNjb3JlICogMTAwKS50b0ZpeGVkKDEpLCAiJSAiKS5jb25jYXQocHJlZGljdGlvbi5jbGFzcyksIHByZWRpY3Rpb24uYmJveFswXSwgcHJlZGljdGlvbi5iYm94WzFdID4gMTAgPyBwcmVkaWN0aW9uLmJib3hbMV0gLSA1IDogMTApOwoKICAgICAgICBfdGhpczUucHJlZGljdGlvbnMucHVzaCh7CiAgICAgICAgICBuYW1lOiBwcmVkaWN0aW9uLmNsYXNzLAogICAgICAgICAgc2NvcmU6IChwcmVkaWN0aW9uLnNjb3JlICogMTAwKS50b0ZpeGVkKDEpCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n  <div id=\"center-container\">\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\n            {{ device.label }}\n        </option>\n    </select>\n    <div id=\"result-frame\">\n      <video ref=\"video\" autoplay></video>\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\n    </div>\n  </div>\n  <ul>\n  <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\n    {{prediction.name}}, {{prediction.score}} %\n  </li>\n</ul>\n</div>\n\n</template>\n\n<script>\n//import HelloWorld from './components/HelloWorld.vue'\nimport * as tf from '@tensorflow/tfjs'\nimport * as cocoSsd from '@tensorflow-models/coco-ssd'\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      videoDevice: '',\n      resultWidth: 0,\n      resultHeight: 0,\n      devices: [],\n          baseModel: 'mobilenet_v2',\n          isModelReady: false,\n      predictions: []\n    }\n  },\n  mounted () {\n    //tf.setBackend('webgl')\n    this.listVideoDevices()\n    .then(videoDevices => {\n        for (let device of videoDevices) {\n            this.devices.push(device)\n        }\n        this.videoDevice = videoDevices[0].deviceId\n    })\n    .then(() => {\n        return this.initWebcamStream()\n    })\n    //.then(() => {\n    //  return this.loadModel()\n    //  .then(() => {\n    //    this.detectObjects()\n    //  })\n    //})\n  },\n  methods: {\n    listVideoDevices () {\n      return navigator.mediaDevices.enumerateDevices()\n      .then(devices => {\n          return devices.filter(device => device.kind === 'videoinput')\n      })\n    },\n\n    initWebcamStream () {\n        this.isVideoStreamReady = false\n        // if the browser supports mediaDevices.getUserMedia API\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        return navigator.mediaDevices.getUserMedia({\n            video: { deviceId: this.videoDevice }\n        })\n        .then(stream => {\n            // set <video> source as the webcam input\n            let video = this.$refs.video\n            video.srcObject = stream\n\n            return new Promise((resolve) => {\n            // when video is loaded\n            video.onloadedmetadata = () => {\n                // calculate the video ratio\n                this.videoRatio = video.videoHeight / video.videoWidth\n                // add event listener on resize to reset the <video> and <canvas> sizes\n                window.addEventListener('resize', this.setResultSize)\n                // set the initial size\n                this.setResultSize()\n                this.isVideoStreamReady = true\n                resolve()\n            }\n            })\n        })\n        // error handling\n        .catch(error => {\n            console.log('failed to initialize webcam stream', error)\n        })\n        }\n    },\n\n    setResultSize () {\n        let clientWidth = document.documentElement.clientWidth\n        this.resultWidth = Math.min(600, clientWidth)\n        this.resultHeight = this.resultWidth * this.videoRatio\n        let video = this.$refs.video\n        video.width = this.resultWidth\n        video.height = this.resultHeight\n      } ,\n\n      loadModel () {\n      return cocoSsd.load(this.baseModel)\n      .then(model => {\n          this.model = model\n          this.isModelReady = true\n          console.log('model loaded')\n      })\n      .catch((error) => {\n          console.log('failed to load the model', error)\n          throw (error)\n      })\n  },\n\n  detectObjects () {\n      if (!this.isModelReady) return\n\n      if (this.isVideoStreamReady) {\n      this.model.detect(this.$refs.video)\n          .then(predictions => {\n              this.renderPredictions(predictions)\n              requestAnimationFrame(() => {\n              this.detectObjects()\n              })\n          })\n      } else {\n      requestAnimationFrame(() => {\n          this.detectObjects()\n      })\n      }\n  },\n\n  renderPredictions (predictions) {\n      this.predictions.splice(0)\n      const ctx = this.$refs.canvas.getContext('2d')\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      predictions.forEach(prediction => {\n          ctx.beginPath()\n          ctx.rect(...prediction.bbox)\n          ctx.lineWidth = 3\n          ctx.strokeStyle = 'red'\n          ctx.fillStyle = 'red'\n          ctx.stroke()\n          ctx.shadowColor = 'white'\n          ctx.shadowBlur = 10\n          ctx.font = '24px Arial bold'\n          ctx.fillText(\n              `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\n              prediction.bbox[0],\n              prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\n          )\n          this.predictions.push({\n          name: prediction.class,\n          score: (prediction.score*100).toFixed(1)\n        })\n      })\n  }\n\n\n}\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nvideo {\n  position: absolute;\n}\n\ncanvas {\n  position: absolute;\n}\n\n#center-container {\n  width: 600px;\n  margin: 0 auto;\n}\n\n#camera-select {\n  width: 300px;\n  margin-bottom: 50px;\n}\n</style>\n"],"sourceRoot":"src"}]}