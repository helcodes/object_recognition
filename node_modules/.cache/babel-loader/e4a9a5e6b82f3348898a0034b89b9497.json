{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1618316862590},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n  <div id=\"center-container\">\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\n            {{ device.label }}\n        </option>\n    </select>\n    <div id=\"result-frame\">\n      <video ref=\"video\" autoplay></video>\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\n    </div>\n    <ul>\n    <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\n      {{prediction.name}}, {{prediction.score}} %\n    </li>\n    </ul>\n  </div>\n</div>\n</template>\n\n<script>\nimport * as tf from '@tensorflow/tfjs'\n//import * as cocoSsd from '@tensorflow-models/coco-ssd'\nimport * as tmImage from '@teachablemachine/image'//teachable machine\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      videoDevice: '',\n      resultWidth: 0,\n      resultHeight: 0,\n      devices: [],\n      baseModel: 'mobilenet_v2',\n      isModelReady: false,\n      predictions: [],\n      synth: window.speechSynthesis,\n      lastPrediction: ''\n    }\n  },\n  mounted () {\n    tf.setBackend('webgl')\n    this.listVideoDevices()\n    .then(videoDevices => {\n        for (let device of videoDevices) {\n            this.devices.push(device)\n        }\n        this.videoDevice = videoDevices[0].deviceId\n    })\n    .then(() => {\n        return this.initWebcamStream()\n    })\n    .then(() => {\n      return this.loadModel()\n      .then(() => {\n        this.detectObjects()\n      })\n    })\n    \n  },\n  methods: {\n    \n    loadModel () {\n      //return cocoSsd.load(this.baseModel)\n      return tmImage.load('/model.json','/metadata.json')//load teachable machine\n      .then(model => {\n          this.model = model\n          this.isModelReady = true\n          console.log('model loaded')\n      })\n      .catch((error) => {\n          console.log('failed to load the model', error)\n          throw (error)\n      })\n    },\n\n    detectObjects () {\n      if (!this.isModelReady) return\n\n      if (this.isVideoStreamReady) {\n      //this.model.detect(this.$refs.video)\n      this.model.predict(this.$refs.video)//teachable machine\n          .then(predictions => {\n              //this.renderPredictions(predictions)\n              this.handlePredictions(predictions)//teachable machine\n              requestAnimationFrame(() => {\n              this.detectObjects()\n              })\n          })\n      } else {\n      requestAnimationFrame(() => {\n          this.detectObjects()\n      })\n      }\n    },\n\n    renderPredictions (predictions) {\n      this.predictions.splice(0)\n      const ctx = this.$refs.canvas.getContext('2d')\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      predictions.forEach(prediction => {\n        ctx.beginPath()\n        ctx.rect(...prediction.bbox)\n        ctx.lineWidth = 3\n        ctx.strokeStyle = 'red'\n        ctx.fillStyle = 'red'\n        ctx.stroke()\n        ctx.shadowColor = 'white'\n        ctx.shadowBlur = 10\n        ctx.font = '24px Arial bold'\n        ctx.fillText(\n            `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\n            prediction.bbox[0],\n            prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\n        )\n        this.predictions.push({\n          name: prediction.class,\n          score: (prediction.score*100).toFixed(1)\n        })\n      })\n    },\n\n/*teachable machine*/\n    handlePredictions (predictions) {\n      this.predictions.splice(0)\n      \n      let maxPrediction\n      let maxProb = 0\n      predictions.forEach(prediction => {\n          this.predictions.push({\n            name: prediction.className,\n            score: (prediction.probability * 100).toFixed(1)\n          })\n          if (prediction.probability > maxProb) {\n            maxProb = prediction.probability\n            maxPrediction = prediction\n          }\n      })\n      if (! this.synth.speaking && this.lastPrediction != maxPrediction.className) {\n        this.speak(maxPrediction.className)\n        this.lastPrediction = maxPrediction.className\n      }\n    },\n\n    speak (prediction) {\n      const utterThis = new SpeechSynthesisUtterance(prediction);\n      this.synth.speak(utterThis)\n    },\n\n\n\n    listVideoDevices () {\n      return navigator.mediaDevices.enumerateDevices()\n      .then(devices => {\n          return devices.filter(device => device.kind === 'videoinput')\n      })\n    },\n\n    initWebcamStream () {\n        this.isVideoStreamReady = false\n        // if the browser supports mediaDevices.getUserMedia API\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        return navigator.mediaDevices.getUserMedia({\n            video: { deviceId: this.videoDevice }\n        })\n        .then(stream => {\n            // set <video> source as the webcam input\n            let video = this.$refs.video\n            video.srcObject = stream\n\n            return new Promise((resolve) => {\n            // when video is loaded\n            video.onloadedmetadata = () => {\n                // calculate the video ratio\n                this.videoRatio = video.videoHeight / video.videoWidth\n                // add event listener on resize to reset the <video> and <canvas> sizes\n                window.addEventListener('resize', this.setResultSize)\n                // set the initial size\n                this.setResultSize()\n                this.isVideoStreamReady = true\n                resolve()\n            }\n            })\n        })\n        // error handling\n        .catch(error => {\n            console.log('failed to initialize webcam stream', error)\n        })\n        }\n    },\n\n    setResultSize () {\n        let clientWidth = document.documentElement.clientWidth\n        this.resultWidth = Math.min(600, clientWidth)\n        this.resultHeight = this.resultWidth * this.videoRatio\n        let video = this.$refs.video\n        video.width = this.resultWidth\n        video.height = this.resultHeight\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nvideo {\n  position: absolute;\n}\n\ncanvas {\n  position: absolute;\n}\n\n#center-container {\n  width: 600px;\n  margin: 0 auto;\n}\n\n#camera-select {\n  width: 300px;\n  margin-bottom: 50px;\n}\n</style>\n"],"sourceRoot":"src"}]}