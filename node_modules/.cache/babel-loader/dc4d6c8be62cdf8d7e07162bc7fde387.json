{"remainingRequest":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js!C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\develop\\object_recognition\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\develop\\object_recognition\\src\\App.vue","mtime":1616697454712},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\develop\\object_recognition\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\develop\\object_recognition\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJDOi9kZXZlbG9wL29iamVjdF9yZWNvZ25pdGlvbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIgZnJvbSAiQzovZGV2ZWxvcC9vYmplY3RfcmVjb2duaXRpb24vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vaW1wb3J0IEhlbGxvV29ybGQgZnJvbSAnLi9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlJwppbXBvcnQgKiBhcyB0ZiBmcm9tICdAdGVuc29yZmxvdy90ZmpzJzsKaW1wb3J0ICogYXMgY29jb1NzZCBmcm9tICdAdGVuc29yZmxvdy1tb2RlbHMvY29jby1zc2QnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZpZGVvRGV2aWNlOiAnJywKICAgICAgcmVzdWx0V2lkdGg6IDAsCiAgICAgIHJlc3VsdEhlaWdodDogMCwKICAgICAgZGV2aWNlczogW10sCiAgICAgIGJhc2VNb2RlbDogJ21vYmlsZW5ldF92MicsCiAgICAgIGlzTW9kZWxSZWFkeTogZmFsc2UsCiAgICAgIHByZWRpY3Rpb25zOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRmLnNldEJhY2tlbmQoJ3dlYmdsJyk7CiAgICB0aGlzLmxpc3RWaWRlb0RldmljZXMoKS50aGVuKGZ1bmN0aW9uICh2aWRlb0RldmljZXMpIHsKICAgICAgdmFyIF9pdGVyYXRvciA9IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyKHZpZGVvRGV2aWNlcyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBkZXZpY2UgPSBfc3RlcC52YWx1ZTsKCiAgICAgICAgICBfdGhpcy5kZXZpY2VzLnB1c2goZGV2aWNlKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgX3RoaXMudmlkZW9EZXZpY2UgPSB2aWRlb0RldmljZXNbMF0uZGV2aWNlSWQ7CiAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIF90aGlzLmluaXRXZWJjYW1TdHJlYW0oKTsKICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gX3RoaXMubG9hZE1vZGVsKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuZGV0ZWN0T2JqZWN0cygpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgbGlzdFZpZGVvRGV2aWNlczogZnVuY3Rpb24gbGlzdFZpZGVvRGV2aWNlcygpIHsKICAgICAgcmV0dXJuIG5hdmlnYXRvci5tZWRpYURldmljZXMuZW51bWVyYXRlRGV2aWNlcygpLnRoZW4oZnVuY3Rpb24gKGRldmljZXMpIHsKICAgICAgICByZXR1cm4gZGV2aWNlcy5maWx0ZXIoZnVuY3Rpb24gKGRldmljZSkgewogICAgICAgICAgcmV0dXJuIGRldmljZS5raW5kID09PSAndmlkZW9pbnB1dCc7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGluaXRXZWJjYW1TdHJlYW06IGZ1bmN0aW9uIGluaXRXZWJjYW1TdHJlYW0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5pc1ZpZGVvU3RyZWFtUmVhZHkgPSBmYWxzZTsgLy8gaWYgdGhlIGJyb3dzZXIgc3VwcG9ydHMgbWVkaWFEZXZpY2VzLmdldFVzZXJNZWRpYSBBUEkKCiAgICAgIGlmIChuYXZpZ2F0b3IubWVkaWFEZXZpY2VzICYmIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKSB7CiAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICAgIHZpZGVvOiB7CiAgICAgICAgICAgIGRldmljZUlkOiB0aGlzLnZpZGVvRGV2aWNlCiAgICAgICAgICB9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoc3RyZWFtKSB7CiAgICAgICAgICAvLyBzZXQgPHZpZGVvPiBzb3VyY2UgYXMgdGhlIHdlYmNhbSBpbnB1dAogICAgICAgICAgdmFyIHZpZGVvID0gX3RoaXMyLiRyZWZzLnZpZGVvOwogICAgICAgICAgdmlkZW8uc3JjT2JqZWN0ID0gc3RyZWFtOwogICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgIC8vIHdoZW4gdmlkZW8gaXMgbG9hZGVkCiAgICAgICAgICAgIHZpZGVvLm9ubG9hZGVkbWV0YWRhdGEgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgLy8gY2FsY3VsYXRlIHRoZSB2aWRlbyByYXRpbwogICAgICAgICAgICAgIF90aGlzMi52aWRlb1JhdGlvID0gdmlkZW8udmlkZW9IZWlnaHQgLyB2aWRlby52aWRlb1dpZHRoOyAvLyBhZGQgZXZlbnQgbGlzdGVuZXIgb24gcmVzaXplIHRvIHJlc2V0IHRoZSA8dmlkZW8+IGFuZCA8Y2FudmFzPiBzaXplcwoKICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgX3RoaXMyLnNldFJlc3VsdFNpemUpOyAvLyBzZXQgdGhlIGluaXRpYWwgc2l6ZQoKICAgICAgICAgICAgICBfdGhpczIuc2V0UmVzdWx0U2l6ZSgpOwoKICAgICAgICAgICAgICBfdGhpczIuaXNWaWRlb1N0cmVhbVJlYWR5ID0gdHJ1ZTsKICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgIH07CiAgICAgICAgICB9KTsKICAgICAgICB9KSAvLyBlcnJvciBoYW5kbGluZwogICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdmYWlsZWQgdG8gaW5pdGlhbGl6ZSB3ZWJjYW0gc3RyZWFtJywgZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgc2V0UmVzdWx0U2l6ZTogZnVuY3Rpb24gc2V0UmVzdWx0U2l6ZSgpIHsKICAgICAgdmFyIGNsaWVudFdpZHRoID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoOwogICAgICB0aGlzLnJlc3VsdFdpZHRoID0gTWF0aC5taW4oNjAwLCBjbGllbnRXaWR0aCk7CiAgICAgIHRoaXMucmVzdWx0SGVpZ2h0ID0gdGhpcy5yZXN1bHRXaWR0aCAqIHRoaXMudmlkZW9SYXRpbzsKICAgICAgdmFyIHZpZGVvID0gdGhpcy4kcmVmcy52aWRlbzsKICAgICAgdmlkZW8ud2lkdGggPSB0aGlzLnJlc3VsdFdpZHRoOwogICAgICB2aWRlby5oZWlnaHQgPSB0aGlzLnJlc3VsdEhlaWdodDsKICAgIH0sCiAgICBsb2FkTW9kZWw6IGZ1bmN0aW9uIGxvYWRNb2RlbCgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gY29jb1NzZC5sb2FkKHRoaXMuYmFzZU1vZGVsKS50aGVuKGZ1bmN0aW9uIChtb2RlbCkgewogICAgICAgIF90aGlzMy5tb2RlbCA9IG1vZGVsOwogICAgICAgIF90aGlzMy5pc01vZGVsUmVhZHkgPSB0cnVlOwogICAgICAgIGNvbnNvbGUubG9nKCdtb2RlbCBsb2FkZWQnKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2ZhaWxlZCB0byBsb2FkIHRoZSBtb2RlbCcsIGVycm9yKTsKICAgICAgICB0aHJvdyBlcnJvcjsKICAgICAgfSk7CiAgICB9LAogICAgZGV0ZWN0T2JqZWN0czogZnVuY3Rpb24gZGV0ZWN0T2JqZWN0cygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMuaXNNb2RlbFJlYWR5KSByZXR1cm47CgogICAgICBpZiAodGhpcy5pc1ZpZGVvU3RyZWFtUmVhZHkpIHsKICAgICAgICB0aGlzLm1vZGVsLmRldGVjdCh0aGlzLiRyZWZzLnZpZGVvKS50aGVuKGZ1bmN0aW9uIChwcmVkaWN0aW9ucykgewogICAgICAgICAgX3RoaXM0LnJlbmRlclByZWRpY3Rpb25zKHByZWRpY3Rpb25zKTsKCiAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdGhpczQuZGV0ZWN0T2JqZWN0cygpOwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzNC5kZXRlY3RPYmplY3RzKCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICByZW5kZXJQcmVkaWN0aW9uczogZnVuY3Rpb24gcmVuZGVyUHJlZGljdGlvbnMocHJlZGljdGlvbnMpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB0aGlzLnByZWRpY3Rpb25zLnNwbGljZSgwKTsKICAgICAgdmFyIGN0eCA9IHRoaXMuJHJlZnMuY2FudmFzLmdldENvbnRleHQoJzJkJyk7CiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgY3R4LmNhbnZhcy53aWR0aCwgY3R4LmNhbnZhcy5oZWlnaHQpOwogICAgICBwcmVkaWN0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVkaWN0aW9uKSB7CiAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgIGN0eC5yZWN0LmFwcGx5KGN0eCwgX3RvQ29uc3VtYWJsZUFycmF5KHByZWRpY3Rpb24uYmJveCkpOwogICAgICAgIGN0eC5saW5lV2lkdGggPSAzOwogICAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZWQnOwogICAgICAgIGN0eC5maWxsU3R5bGUgPSAncmVkJzsKICAgICAgICBjdHguc3Ryb2tlKCk7CiAgICAgICAgY3R4LnNoYWRvd0NvbG9yID0gJ3doaXRlJzsKICAgICAgICBjdHguc2hhZG93Qmx1ciA9IDEwOwogICAgICAgIGN0eC5mb250ID0gJzI0cHggQXJpYWwgYm9sZCc7CiAgICAgICAgY3R4LmZpbGxUZXh0KCIiLmNvbmNhdCgocHJlZGljdGlvbi5zY29yZSAqIDEwMCkudG9GaXhlZCgxKSwgIiUgIikuY29uY2F0KHByZWRpY3Rpb24uY2xhc3MpLCBwcmVkaWN0aW9uLmJib3hbMF0sIHByZWRpY3Rpb24uYmJveFsxXSA+IDEwID8gcHJlZGljdGlvbi5iYm94WzFdIC0gNSA6IDEwKTsKCiAgICAgICAgX3RoaXM1LnByZWRpY3Rpb25zLnB1c2goewogICAgICAgICAgbmFtZTogcHJlZGljdGlvbi5jbGFzcywKICAgICAgICAgIHNjb3JlOiAocHJlZGljdGlvbi5zY29yZSAqIDEwMCkudG9GaXhlZCgxKQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n  <div id=\"center-container\">\n    <select id=\"camera-select\" v-model=\"videoDevice\" @change=\"initWebcamStream()\">\n        <option v-for=\"device in devices\" v-bind:key=\"device.deviceId\" v-bind:value=\"device.deviceId\">\n            {{ device.label }}\n        </option>\n    </select>\n    <div id=\"result-frame\">\n      <video ref=\"video\" autoplay></video>\n      <canvas ref=\"canvas\" :width=\"resultWidth\" :height=\"resultHeight\"></canvas>\n    </div>\n  </div>\n  <ul>\n  <li v-for=\"(prediction, index) in predictions\" v-bind:key=\"index\">\n    {{prediction.name}}, {{prediction.score}} %\n  </li>\n</ul>\n</div>\n\n</template>\n\n<script>\n//import HelloWorld from './components/HelloWorld.vue'\nimport * as tf from '@tensorflow/tfjs'\nimport * as cocoSsd from '@tensorflow-models/coco-ssd'\n\nexport default {\n  name: 'App',\n  components: {\n  },\n  data () {\n    return {\n      videoDevice: '',\n      resultWidth: 0,\n      resultHeight: 0,\n      devices: [],\n          baseModel: 'mobilenet_v2',\n          isModelReady: false,\n      predictions: []\n    }\n  },\n  mounted () {\n    tf.setBackend('webgl')\n    this.listVideoDevices()\n    .then(videoDevices => {\n        for (let device of videoDevices) {\n            this.devices.push(device)\n        }\n        this.videoDevice = videoDevices[0].deviceId\n    })\n    .then(() => {\n        return this.initWebcamStream()\n    })\n    .then(() => {\n      return this.loadModel()\n      .then(() => {\n        this.detectObjects()\n      })\n    })\n  },\n  methods: {\n    listVideoDevices () {\n        return navigator.mediaDevices.enumerateDevices()\n        .then(devices => {\n            return devices.filter(device => device.kind === 'videoinput')\n        })\n    },\n\n    initWebcamStream () {\n        this.isVideoStreamReady = false\n        // if the browser supports mediaDevices.getUserMedia API\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        return navigator.mediaDevices.getUserMedia({\n            video: { deviceId: this.videoDevice }\n        })\n        .then(stream => {\n            // set <video> source as the webcam input\n            let video = this.$refs.video\n            video.srcObject = stream\n\n            return new Promise((resolve) => {\n            // when video is loaded\n            video.onloadedmetadata = () => {\n                // calculate the video ratio\n                this.videoRatio = video.videoHeight / video.videoWidth\n                // add event listener on resize to reset the <video> and <canvas> sizes\n                window.addEventListener('resize', this.setResultSize)\n                // set the initial size\n                this.setResultSize()\n                this.isVideoStreamReady = true\n                resolve()\n            }\n            })\n        })\n        // error handling\n        .catch(error => {\n            console.log('failed to initialize webcam stream', error)\n        })\n        }\n    },\n\n    setResultSize () {\n        let clientWidth = document.documentElement.clientWidth\n        this.resultWidth = Math.min(600, clientWidth)\n        this.resultHeight = this.resultWidth * this.videoRatio\n        let video = this.$refs.video\n        video.width = this.resultWidth\n        video.height = this.resultHeight\n      } ,\n\n      loadModel () {\n      return cocoSsd.load(this.baseModel)\n      .then(model => {\n          this.model = model\n          this.isModelReady = true\n          console.log('model loaded')\n      })\n      .catch((error) => {\n          console.log('failed to load the model', error)\n          throw (error)\n      })\n  },\n\n  detectObjects () {\n      if (!this.isModelReady) return\n\n      if (this.isVideoStreamReady) {\n      this.model.detect(this.$refs.video)\n          .then(predictions => {\n              this.renderPredictions(predictions)\n              requestAnimationFrame(() => {\n              this.detectObjects()\n              })\n          })\n      } else {\n      requestAnimationFrame(() => {\n          this.detectObjects()\n      })\n      }\n  },\n\n  renderPredictions (predictions) {\n      this.predictions.splice(0)\n      const ctx = this.$refs.canvas.getContext('2d')\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      predictions.forEach(prediction => {\n          ctx.beginPath()\n          ctx.rect(...prediction.bbox)\n          ctx.lineWidth = 3\n          ctx.strokeStyle = 'red'\n          ctx.fillStyle = 'red'\n          ctx.stroke()\n          ctx.shadowColor = 'white'\n          ctx.shadowBlur = 10\n          ctx.font = '24px Arial bold'\n          ctx.fillText(\n              `${(prediction.score * 100).toFixed(1)}% ${prediction.class}`,\n              prediction.bbox[0],\n              prediction.bbox[1] > 10 ? prediction.bbox[1] - 5 : 10\n          )\n          this.predictions.push({\n          name: prediction.class,\n          score: (prediction.score*100).toFixed(1)\n        })\n      })\n  }\n\n\n}\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\nvideo {\n  position: absolute;\n}\n\ncanvas {\n  position: absolute;\n}\n\n#center-container {\n  width: 600px;\n  margin: 0 auto;\n}\n\n#camera-select {\n  width: 300px;\n  margin-bottom: 50px;\n}\n</style>\n"],"sourceRoot":"src"}]}